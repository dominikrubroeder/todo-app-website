import type { NextPage } from 'next';
import Head from 'next/head';
import { useContext } from 'react';
import TodoAddForm from '../components/todo/TodoAddForm';
import { TodoContext } from '../store/TodoContext';
import ThemeSwitch from '../components/ThemeSwitch';
import MainBackgroundImage from '../components/MainBackgroundImage';
import TodoListFooter from '../components/todo/todo-list/TodoListFooter';
import TodoListFooterMinimal from '../components/todo/todo-list/TodoListFooterMinimal';
import TodoListScrollable from '../components/todo/todo-list/TodoListScrollable';

const Home: NextPage = () => {
  const todoCtx = useContext(TodoContext);

  return (
    <div>
      <Head>
        <title>Todo app | frontendmentor.io</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/favicon-32x32.png" type="image/png" />
      </Head>

      <main className="flex items-center justify-center flex-col gap-4 min-h-screen px-4 py-12 bg-app-tlight-gray-100 smooth-transition dark:bg-app-tdark-blue-800 sm:gap-16 sm:px-0 sm:py-0">
        <MainBackgroundImage />

        <div className="grid gap-8 relative max-w-screen-sm w-full z-10">
          <header className="fixed max-w-xs top-16 w-full grid gap-4 sm:gap-8 sm:max-w-screen-sm sm:top-32">
            <div className="flex items-center justify-between">
              <h1 className="tracking-[0.5rem] uppercase text-3xl font-bold text-white">
                Todo
              </h1>

              <ThemeSwitch />
            </div>

            <TodoAddForm />
          </header>

          <div
            className={`grid gap-4 drop-shadow-2xl ${
              todoCtx!.count > 0 ? 'mt-24' : 'mt-0'
            }`}
          >
            <div className="bg-white dark:bg-app-tdark-blue-desaturated-800 rounded-md">
              <TodoListScrollable />

              {todoCtx!.count > 0 && <TodoListFooter />}
            </div>
          </div>
        </div>

        {todoCtx!.count > 0 && <TodoListFooterMinimal />}

        {todoCtx!.count > 0 && (
          <p className="text-app-tlight-gray-blue-600 dark:text-app-tdark-gray-blue-600 text-xs">
            Drag and drop to reorder list
          </p>
        )}
      </main>
    </div>
  );
};

export default Home;
